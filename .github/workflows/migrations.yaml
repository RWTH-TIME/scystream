name: Migrations
on:
  pull_request:

jobs:
  detect-diffs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Changes in models directories
        id: model-changes
        uses: tj-actions/changed-files@v45
        with:
          path: "core/services"
          files: "./*/models/**"

      - name: Model changes Output
        env:
          CHANGED_MODEL_FILES: ${{ steps.model-changes.outputs.all_changed_files }}
        run: |
          for file in "${CHANGED_MODEL_FILES}"; do
            echo "$file was changed"
          done

      - name: Changes in migrations
        id: migration-changes
        uses: tj-actions/changed-files@v45
        with:
          path: "core/alembic/versions"
          files: "*.py"

      - name: Migration changes Output
        env:
          CHANGED_MIGRATION_FILES: ${{ steps.migration-changes.outputs.all_changed_files }}
        run: |
          for file in ${CHANGED_MIGRATION_FILES}; do
            echo "$file was changed"
          done
      
      - name: Validate Changes
        env:
          CHANGED_MODEL_FILES: ${{ steps.model-changes.outputs.all_changed_files }}
          CHANGED_MIGRATION_FILES: ${{ steps.migration-changes.outputs.all_changed_files }}
        run: |
          if [[ -n "$CHANGED_MODEL_FILES" && -z "$CHANGED_MIGRATION_FILES" ]]; then
            echo "Model Chages detected, but no corresponding migration changes. Create the corresponding migrations."
            exit 1
          fi

          if [[ -n "$CHANGED_MIGRATION_FILES" && -z "$CHANGED_MODEL_FILES" ]]; then
            echo "Migration Changes detected, but no corresponding model changes."
            exit 1
          fi
          
          echo "Changes look valid."
    
    outputs:
      changed_migration_files: ${{ steps.migration-changes.outputs.all_changed_files }}

    
  prevent-changes:
    runs-on: ubuntu-latest
    needs: detect-diffs
    steps:
      - name: Checkout Repository 
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.base_ref }}
      
      - name: prevent-changes-to-existing-migrations
        run: |
          EXISTING_MIGRATIONS=$(git ls-tree -r HEAD --name-only | grep "core/alembic/versions/.*\.py")
          CHANGED_MIGRATION_FILES="${{ needs.detect-diffs.outputs.changed_migration_files }}"
          
          for changed_migration in $CHANGED_MIGRATION_FILES; do
            if echo $EXISTING_MIGRATIONS | grep "$changed_migration"; then
              echo "An already existing migration should not be edited!"
              exit 1
            fi
          done
