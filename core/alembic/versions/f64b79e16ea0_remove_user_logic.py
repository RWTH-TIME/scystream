"""remove user logic

Revision ID: f64b79e16ea0
Revises: cabd8077b788
Create Date: 2025-05-20 14:25:13.505119

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f64b79e16ea0'
down_revision: Union[str, None] = 'cabd8077b788'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('user_project')
    op.add_column('projects', sa.Column('users', postgresql.ARRAY(sa.UUID()), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('projects', 'users')
    op.create_table('user_project',
    sa.Column('user_uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('project_uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_uuid'], ['projects.uuid'], name='user_project_project_uuid_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], name='user_project_user_uuid_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_uuid', 'project_uuid', name='user_project_pkey')
    )
    op.create_table('users',
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('uuid', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    # ### end Alembic commands ###
