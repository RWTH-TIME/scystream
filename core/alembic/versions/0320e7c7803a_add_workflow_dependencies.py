"""add_workflow_dependencies

Revision ID: 0320e7c7803a
Revises: 09c39621eadc
Create Date: 2025-01-22 12:01:43.151923

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0320e7c7803a'
down_revision: Union[str, None] = '09c39621eadc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('block_dependencies',
                    sa.Column('upstream_block_uuid',
                              sa.UUID(), nullable=False),
                    sa.Column('downstream_block_uuid',
                              sa.UUID(), nullable=False),
                    sa.ForeignKeyConstraint(['downstream_block_uuid'], [
                        'blocks.uuid'], name='fk_downstream_block', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['upstream_block_uuid'], [
                        'blocks.uuid'], name='fk_upstream_block', ondelete='CASCADE'),)
    op.create_table('entrypoints',
                    sa.Column('uuid', sa.UUID(), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('description', sa.String(
                        length=500), nullable=True),
                    sa.Column('envs', sa.JSON(), nullable=False),
                    sa.Column('block_uuid', sa.UUID(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['block_uuid'], ['blocks.uuid'], name='fk_block_uuid', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('uuid')
                    )
    op.create_table('inputoutputs',
                    sa.Column('uuid', sa.UUID(), nullable=False),
                    sa.Column('type', sa.Enum('INPUT', 'OUTPUT',
                              name='inputoutputtype'), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=True),
                    sa.Column('data_type', sa.Enum('PGTABLE', 'FILE', 'CUSTOM',
                                                   name='datatype'), nullable=False),
                    sa.Column('description', sa.String(
                        length=500), nullable=True),
                    sa.Column('config', sa.JSON(), nullable=False),
                    sa.Column('entrypoint_uuid', sa.UUID(), nullable=True),
                    sa.ForeignKeyConstraint(['entrypoint_uuid'], [
                        'entrypoints.uuid'], name='fk_entrypoint_uuid', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('uuid')
                    )
    op.add_column('blocks', sa.Column(
        'priority_weight', sa.Integer(), nullable=True))
    op.add_column('blocks', sa.Column('retries', sa.Integer(), nullable=True))
    op.add_column('blocks', sa.Column(
        'retry_delay', sa.Integer(), nullable=True))
    op.add_column('blocks', sa.Column(
        'custom_name', sa.String(length=100), nullable=False))
    op.add_column('blocks', sa.Column(
        'description', sa.String(length=100), nullable=True))
    op.add_column('blocks', sa.Column(
        'author', sa.String(length=100), nullable=True))
    op.add_column('blocks', sa.Column('docker_image',
                  sa.String(length=150), nullable=False))
    op.add_column('blocks', sa.Column(
        'repo_url', sa.String(length=100), nullable=False))
    op.add_column('blocks', sa.Column('x_pos', sa.Float(), nullable=True))
    op.add_column('blocks', sa.Column('y_pos', sa.Float(), nullable=True))
    op.add_column('projects', sa.Column(
        'default_retries', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('projects', 'default_retries')
    op.drop_column('blocks', 'y_pos')
    op.drop_column('blocks', 'x_pos')
    op.drop_column('blocks', 'repo_url')
    op.drop_column('blocks', 'docker_image')
    op.drop_column('blocks', 'author')
    op.drop_column('blocks', 'description')
    op.drop_column('blocks', 'custom_name')
    op.drop_column('blocks', 'retry_delay')
    op.drop_column('blocks', 'retries')
    op.drop_column('blocks', 'priority_weight')
    op.drop_table('inputoutputs')
    op.drop_table('entrypoints')
    op.drop_table('block_dependencies')
    op.execute("""
                DROP TYPE inputoutputtype;
               """)
    op.execute("""
                DROP TYPE datatype;
               """)

    # ### end Alembic commands ###
